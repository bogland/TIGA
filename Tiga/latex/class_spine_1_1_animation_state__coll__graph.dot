digraph "Spine.AnimationState"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Spine.AnimationState\n|+ Data\l+ Tracks\l+ TimeScale\l~ Subsequent\l- propertyIDs\l- animationsChanged\l- timeScale\l- Interrupt\l- End\l- Dispose\l- Complete\l- First\l- Dip\l- DipMix\l|+ TrackEntryDelegate()\l+ TrackEntryEventDelegate()\l+ AnimationState()\l+ Update()\l+ Apply()\l+ ClearTracks()\l+ ClearTrack()\l+ SetAnimation()\l+ SetAnimation()\l+ AddAnimation()\l그리고 6개 더...\l~ OnStart()\l~ OnInterrupt()\l~ OnEnd()\l~ OnDispose()\l~ OnComplete()\l~ OnEvent()\l- UpdateMixingFrom()\l- ApplyMixingFrom()\l- QueueEvents()\l- SetCurrent()\l- ExpandToIndex()\l- NewTrackEntry()\l- DisposeNext()\l- AnimationsChanged()\l- ApplyRotateTimeline()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -data" ,arrowhead="odiamond"];
  Node2 [label="{Spine.AnimationStateData\n|+ SkeletonData\l+ DefaultMix\l~ defaultMix\l- animationToMixTime\l|+ AnimationStateData()\l+ SetMix()\l+ SetMix()\l+ GetMix()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_animation_state_data.html",tooltip="Stores mix (crossfade) durations to be applied when AnimationState animations are changed."];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" ~skeletonData" ,arrowhead="odiamond"];
  Node3 [label="{Spine.SkeletonData\n|+ Name\l+ Bones\l+ Slots\l+ Skins\l+ DefaultSkin\l+ Events\l+ Animations\l+ IkConstraints\l+ TransformConstraints\l+ PathConstraints\l그리고 6개 더...\l~ name\l~ width\l~ version\l~ fps\l~ imagesPath\l- height\l- hash\l|+ FindBone()\l+ FindBoneIndex()\l+ FindSlot()\l+ FindSlotIndex()\l+ FindSkin()\l+ FindEvent()\l+ FindAnimation()\l+ FindIkConstraint()\l+ FindTransformConstraint()\l+ FindPathConstraint()\l+ FindPathConstraintIndex()\l+ ToString()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_skeleton_data.html",tooltip="Stores the setup pose and all of the stateless data for a skeleton."];
  Node4 -> Node3 [color="grey25",fontsize="10",style="solid",label=" ~animations" ,arrowhead="odiamond"];
  Node4 [label="{Spine.ExposedList\<\l Spine.Animation \>\n|+ Items\l+ Count\l+ Capacity\l- version\l- DefaultCapacity\l- EmptyArray\l|+ ExposedList()\l+ ExposedList()\l+ ExposedList()\l+ Add()\l+ GrowIfNeeded()\l+ Resize()\l+ EnsureCapacity()\l+ AddRange()\l+ BinarySearch()\l+ BinarySearch()\l그리고 42개 더...\l~ ExposedList()\l- CheckRange()\l- AddCollection()\l- AddEnumerable()\l- FindAllList()\l- GetIndex()\l- GetLastIndex()\l- GetEnumerator()\l- GetEnumerator()\l- Shift()\l- CheckIndex()\l- CheckCollection()\l- InsertCollection()\l- InsertEnumeration()\l- CheckMatch()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_exposed_list.html",tooltip=" "];
  Node5 -> Node3 [color="grey25",fontsize="10",style="solid",label=" ~pathConstraints" ,arrowhead="odiamond"];
  Node5 [label="{Spine.ExposedList\<\l Spine.PathConstraintData \>\n|+ Items\l+ Count\l+ Capacity\l- version\l- DefaultCapacity\l- EmptyArray\l|+ ExposedList()\l+ ExposedList()\l+ ExposedList()\l+ Add()\l+ GrowIfNeeded()\l+ Resize()\l+ EnsureCapacity()\l+ AddRange()\l+ BinarySearch()\l+ BinarySearch()\l그리고 42개 더...\l~ ExposedList()\l- CheckRange()\l- AddCollection()\l- AddEnumerable()\l- FindAllList()\l- GetIndex()\l- GetLastIndex()\l- GetEnumerator()\l- GetEnumerator()\l- Shift()\l- CheckIndex()\l- CheckCollection()\l- InsertCollection()\l- InsertEnumeration()\l- CheckMatch()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_exposed_list.html",tooltip=" "];
  Node6 -> Node3 [color="grey25",fontsize="10",style="solid",label=" ~events" ,arrowhead="odiamond"];
  Node6 [label="{Spine.ExposedList\<\l Spine.EventData \>\n|+ Items\l+ Count\l+ Capacity\l- version\l- DefaultCapacity\l- EmptyArray\l|+ ExposedList()\l+ ExposedList()\l+ ExposedList()\l+ Add()\l+ GrowIfNeeded()\l+ Resize()\l+ EnsureCapacity()\l+ AddRange()\l+ BinarySearch()\l+ BinarySearch()\l그리고 42개 더...\l~ ExposedList()\l- CheckRange()\l- AddCollection()\l- AddEnumerable()\l- FindAllList()\l- GetIndex()\l- GetLastIndex()\l- GetEnumerator()\l- GetEnumerator()\l- Shift()\l- CheckIndex()\l- CheckCollection()\l- InsertCollection()\l- InsertEnumeration()\l- CheckMatch()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_exposed_list.html",tooltip=" "];
  Node7 -> Node3 [color="grey25",fontsize="10",style="solid",label=" ~skins" ,arrowhead="odiamond"];
  Node7 [label="{Spine.ExposedList\<\l Spine.Skin \>\n|+ Items\l+ Count\l+ Capacity\l- version\l- DefaultCapacity\l- EmptyArray\l|+ ExposedList()\l+ ExposedList()\l+ ExposedList()\l+ Add()\l+ GrowIfNeeded()\l+ Resize()\l+ EnsureCapacity()\l+ AddRange()\l+ BinarySearch()\l+ BinarySearch()\l그리고 42개 더...\l~ ExposedList()\l- CheckRange()\l- AddCollection()\l- AddEnumerable()\l- FindAllList()\l- GetIndex()\l- GetLastIndex()\l- GetEnumerator()\l- GetEnumerator()\l- Shift()\l- CheckIndex()\l- CheckCollection()\l- InsertCollection()\l- InsertEnumeration()\l- CheckMatch()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_exposed_list.html",tooltip=" "];
  Node8 -> Node3 [color="grey25",fontsize="10",style="solid",label=" ~defaultSkin" ,arrowhead="odiamond"];
  Node8 [label="{Spine.Skin\n|+ Name\l+ Attachments\l~ name\l- attachments\l|+ Skin()\l+ AddAttachment()\l+ GetAttachment()\l+ FindNamesForSlot()\l+ FindAttachmentsForSlot()\l+ ToString()\l~ AttachAll()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_skin.html",tooltip="Stores attachments by slot index and attachment name."];
  Node9 -> Node3 [color="grey25",fontsize="10",style="solid",label=" ~ikConstraints" ,arrowhead="odiamond"];
  Node9 [label="{Spine.ExposedList\<\l Spine.IkConstraintData \>\n|+ Items\l+ Count\l+ Capacity\l- version\l- DefaultCapacity\l- EmptyArray\l|+ ExposedList()\l+ ExposedList()\l+ ExposedList()\l+ Add()\l+ GrowIfNeeded()\l+ Resize()\l+ EnsureCapacity()\l+ AddRange()\l+ BinarySearch()\l+ BinarySearch()\l그리고 42개 더...\l~ ExposedList()\l- CheckRange()\l- AddCollection()\l- AddEnumerable()\l- FindAllList()\l- GetIndex()\l- GetLastIndex()\l- GetEnumerator()\l- GetEnumerator()\l- Shift()\l- CheckIndex()\l- CheckCollection()\l- InsertCollection()\l- InsertEnumeration()\l- CheckMatch()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_exposed_list.html",tooltip=" "];
  Node10 -> Node3 [color="grey25",fontsize="10",style="solid",label=" ~transformConstraints" ,arrowhead="odiamond"];
  Node10 [label="{Spine.ExposedList\<\l Spine.TransformConstraint\lData \>\n|+ Items\l+ Count\l+ Capacity\l- version\l- DefaultCapacity\l- EmptyArray\l|+ ExposedList()\l+ ExposedList()\l+ ExposedList()\l+ Add()\l+ GrowIfNeeded()\l+ Resize()\l+ EnsureCapacity()\l+ AddRange()\l+ BinarySearch()\l+ BinarySearch()\l그리고 42개 더...\l~ ExposedList()\l- CheckRange()\l- AddCollection()\l- AddEnumerable()\l- FindAllList()\l- GetIndex()\l- GetLastIndex()\l- GetEnumerator()\l- GetEnumerator()\l- Shift()\l- CheckIndex()\l- CheckCollection()\l- InsertCollection()\l- InsertEnumeration()\l- CheckMatch()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_exposed_list.html",tooltip=" "];
  Node11 -> Node3 [color="grey25",fontsize="10",style="solid",label=" ~slots" ,arrowhead="odiamond"];
  Node11 [label="{Spine.ExposedList\<\l Spine.SlotData \>\n|+ Items\l+ Count\l+ Capacity\l- version\l- DefaultCapacity\l- EmptyArray\l|+ ExposedList()\l+ ExposedList()\l+ ExposedList()\l+ Add()\l+ GrowIfNeeded()\l+ Resize()\l+ EnsureCapacity()\l+ AddRange()\l+ BinarySearch()\l+ BinarySearch()\l그리고 42개 더...\l~ ExposedList()\l- CheckRange()\l- AddCollection()\l- AddEnumerable()\l- FindAllList()\l- GetIndex()\l- GetLastIndex()\l- GetEnumerator()\l- GetEnumerator()\l- Shift()\l- CheckIndex()\l- CheckCollection()\l- InsertCollection()\l- InsertEnumeration()\l- CheckMatch()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_exposed_list.html",tooltip=" "];
  Node12 -> Node3 [color="grey25",fontsize="10",style="solid",label=" ~bones" ,arrowhead="odiamond"];
  Node12 [label="{Spine.ExposedList\<\l Spine.BoneData \>\n|+ Items\l+ Count\l+ Capacity\l- version\l- DefaultCapacity\l- EmptyArray\l|+ ExposedList()\l+ ExposedList()\l+ ExposedList()\l+ Add()\l+ GrowIfNeeded()\l+ Resize()\l+ EnsureCapacity()\l+ AddRange()\l+ BinarySearch()\l+ BinarySearch()\l그리고 42개 더...\l~ ExposedList()\l- CheckRange()\l- AddCollection()\l- AddEnumerable()\l- FindAllList()\l- GetIndex()\l- GetLastIndex()\l- GetEnumerator()\l- GetEnumerator()\l- Shift()\l- CheckIndex()\l- CheckCollection()\l- InsertCollection()\l- InsertEnumeration()\l- CheckMatch()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_exposed_list.html",tooltip=" "];
  Node13 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -queue" ,arrowhead="odiamond"];
  Node13 [label="{Spine.EventQueue\n|~ drainDisabled\l- eventQueueEntries\l|~ EventQueue()\l~ Start()\l~ Interrupt()\l~ End()\l~ Dispose()\l~ Complete()\l~ Event()\l~ Drain()\l~ Clear()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_event_queue.html",tooltip=" "];
  Node1 -> Node13 [color="grey25",fontsize="10",style="solid",label=" -state" ,arrowhead="odiamond"];
  Node14 -> Node13 [color="grey25",fontsize="10",style="solid",label=" -trackEntryPool" ,arrowhead="odiamond"];
  Node14 [label="{Spine.Pool\< Spine.TrackEntry \>\n|+ max\l+ Count\l+ Peak\l- freeObjects\l|+ Pool()\l+ Obtain()\l+ Free()\l+ Clear()\l# Reset()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_pool.html",tooltip=" "];
  Node15 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -events" ,arrowhead="odiamond"];
  Node15 [label="{Spine.ExposedList\<\l Spine.Event \>\n|+ Items\l+ Count\l+ Capacity\l- version\l- DefaultCapacity\l- EmptyArray\l|+ ExposedList()\l+ ExposedList()\l+ ExposedList()\l+ Add()\l+ GrowIfNeeded()\l+ Resize()\l+ EnsureCapacity()\l+ AddRange()\l+ BinarySearch()\l+ BinarySearch()\l그리고 42개 더...\l~ ExposedList()\l- CheckRange()\l- AddCollection()\l- AddEnumerable()\l- FindAllList()\l- GetIndex()\l- GetLastIndex()\l- GetEnumerator()\l- GetEnumerator()\l- Shift()\l- CheckIndex()\l- CheckCollection()\l- InsertCollection()\l- InsertEnumeration()\l- CheckMatch()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_exposed_list.html",tooltip=" "];
  Node16 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -mixingTo\n-tracks" ,arrowhead="odiamond"];
  Node16 [label="{Spine.ExposedList\<\l Spine.TrackEntry \>\n|+ Items\l+ Count\l+ Capacity\l- version\l- DefaultCapacity\l- EmptyArray\l|+ ExposedList()\l+ ExposedList()\l+ ExposedList()\l+ Add()\l+ GrowIfNeeded()\l+ Resize()\l+ EnsureCapacity()\l+ AddRange()\l+ BinarySearch()\l+ BinarySearch()\l그리고 42개 더...\l~ ExposedList()\l- CheckRange()\l- AddCollection()\l- AddEnumerable()\l- FindAllList()\l- GetIndex()\l- GetLastIndex()\l- GetEnumerator()\l- GetEnumerator()\l- Shift()\l- CheckIndex()\l- CheckCollection()\l- InsertCollection()\l- InsertEnumeration()\l- CheckMatch()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_exposed_list.html",tooltip=" "];
  Node17 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -EmptyAnimation" ,arrowhead="odiamond"];
  Node17 [label="{Spine.Animation\n|+ Name\l+ Timelines\l+ Duration\l~ duration\l~ name\l|+ Animation()\l+ Apply()\l~ BinarySearch()\l~ BinarySearch()\l~ LinearSearch()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_animation.html",tooltip=" "];
  Node18 -> Node17 [color="grey25",fontsize="10",style="solid",label=" ~timelines" ,arrowhead="odiamond"];
  Node18 [label="{Spine.ExposedList\<\l Spine.Timeline \>\n|+ Items\l+ Count\l+ Capacity\l- version\l- DefaultCapacity\l- EmptyArray\l|+ ExposedList()\l+ ExposedList()\l+ ExposedList()\l+ Add()\l+ GrowIfNeeded()\l+ Resize()\l+ EnsureCapacity()\l+ AddRange()\l+ BinarySearch()\l+ BinarySearch()\l그리고 42개 더...\l~ ExposedList()\l- CheckRange()\l- AddCollection()\l- AddEnumerable()\l- FindAllList()\l- GetIndex()\l- GetLastIndex()\l- GetEnumerator()\l- GetEnumerator()\l- Shift()\l- CheckIndex()\l- CheckCollection()\l- InsertCollection()\l- InsertEnumeration()\l- CheckMatch()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_exposed_list.html",tooltip=" "];
  Node14 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -trackEntryPool" ,arrowhead="odiamond"];
}
