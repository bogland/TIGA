digraph "Spine.Unity.Editor.SkeletonAnimationInspector"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Spine.Unity.Editor.Skeleton\lAnimationInspector\n|# animationName\l# wasAnimationNameChanged\l# requireRepaint\l- loop\l- timeScale\l- autoReset\l- LoopLabel\l- TimeScaleLabel\l|# OnEnable()\l# DrawInspectorGUI()\l# TrySetAnimation()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{SkeletonRendererInspector\n|+ advancedFoldout\l+ TargetIsValid\l# skeletonDataAsset\l# initialFlipX\l# singleSubmesh\l# normals\l# sortingProperties\l# isInspectingPrefab\l# SkeletonDataAssetLabel\l# PMAVertexColorsLabel\l# NormalsLabel\l- initialSkinName\l- initialFlipY\l- separatorSlotNames\l- clearStateOnDisable\l- immutableTriangles\l- tangents\l- meshes\l- zSpacing\l- pmaVertexColors\l- tintBlack\l그리고 10개 더...\l- ReloadButtonLabel\l|+ OnSceneGUI()\l+ OnInspectorGUI()\l+ ReapplySeparatorSlotNames()\l+ SeparatorsField()\l# OnEnable()\l# DrawInspectorGUI()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_unity_1_1_editor_1_1_skeleton_renderer_inspector.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{UnityEditor::Editor\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
}
