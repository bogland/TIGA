digraph "Spine.Unity.MeshRendererBuffers"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Spine.Unity.MeshRenderer\lBuffers\n|~ sharedMaterials\l|+ Initialize()\l+ GetUpdatedSharedMaterials\lArray()\l+ MaterialsChangedInLastUpdate()\l+ UpdateSharedMaterials()\l+ GetNextMesh()\l+ Clear()\l+ Dispose()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{IDisposable\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node3 -> Node1 [color="grey25",fontsize="10",style="solid",label=" -doubleBufferedMesh" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{Spine.Unity.DoubleBuffered\l\< Spine.Unity.MeshRendererBuffers.\lSmartMesh \>\n|- a\l- b\l- usingA\l|+ GetCurrent()\l+ GetNext()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_unity_1_1_double_buffered.html",tooltip=" "];
  Node4 -> Node1 [color="grey25",fontsize="10",style="solid",label=" ~submeshMaterials" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{Spine.ExposedList\<\l Material \>\n|+ Items\l+ Count\l+ Capacity\l- version\l- DefaultCapacity\l- EmptyArray\l|+ ExposedList()\l+ ExposedList()\l+ ExposedList()\l+ Add()\l+ GrowIfNeeded()\l+ Resize()\l+ EnsureCapacity()\l+ AddRange()\l+ BinarySearch()\l+ BinarySearch()\l그리고 42개 더...\l~ ExposedList()\l- CheckRange()\l- AddCollection()\l- AddEnumerable()\l- FindAllList()\l- GetIndex()\l- GetLastIndex()\l- GetEnumerator()\l- GetEnumerator()\l- Shift()\l- CheckIndex()\l- CheckCollection()\l- InsertCollection()\l- InsertEnumeration()\l- CheckMatch()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_exposed_list.html",tooltip=" "];
}
