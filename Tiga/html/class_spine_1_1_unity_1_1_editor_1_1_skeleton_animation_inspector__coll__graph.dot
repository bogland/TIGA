digraph "Spine.Unity.Editor.SkeletonAnimationInspector"
{
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{Spine.Unity.Editor.Skeleton\lAnimationInspector\n|# animationName\l# wasAnimationNameChanged\l# requireRepaint\l- loop\l- timeScale\l- autoReset\l- LoopLabel\l- TimeScaleLabel\l|# OnEnable()\l# DrawInspectorGUI()\l# TrySetAnimation()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip=" "];
  Node2 -> Node1 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{SkeletonRendererInspector\n|+ advancedFoldout\l+ TargetIsValid\l# skeletonDataAsset\l# initialFlipX\l# singleSubmesh\l# normals\l# isInspectingPrefab\l# SkeletonDataAssetLabel\l# PMAVertexColorsLabel\l# NormalsLabel\l- initialSkinName\l- initialFlipY\l- separatorSlotNames\l- clearStateOnDisable\l- immutableTriangles\l- tangents\l- meshes\l- zSpacing\l- pmaVertexColors\l- tintBlack\l그리고 9개 더...\l- ReloadButtonLabel\l|+ OnSceneGUI()\l+ OnInspectorGUI()\l+ ReapplySeparatorSlotNames()\l+ SeparatorsField()\l# OnEnable()\l# DrawInspectorGUI()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_unity_1_1_editor_1_1_skeleton_renderer_inspector.html",tooltip=" "];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{UnityEditor::Editor\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" -loadedSkinList" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{Spine.ExposedList\<\l Spine.Skin \>\n|+ Items\l+ Count\l+ Capacity\l- version\l- DefaultCapacity\l- EmptyArray\l|+ ExposedList()\l+ ExposedList()\l+ ExposedList()\l+ Add()\l+ GrowIfNeeded()\l+ Resize()\l+ EnsureCapacity()\l+ AddRange()\l+ BinarySearch()\l+ BinarySearch()\l그리고 42개 더...\l~ ExposedList()\l- CheckRange()\l- AddCollection()\l- AddEnumerable()\l- FindAllList()\l- GetIndex()\l- GetLastIndex()\l- GetEnumerator()\l- GetEnumerator()\l- Shift()\l- CheckIndex()\l- CheckCollection()\l- InsertCollection()\l- InsertEnumeration()\l- CheckMatch()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_exposed_list.html",tooltip=" "];
  Node5 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #sortingProperties" ,arrowhead="odiamond",fontname="Helvetica"];
  Node5 [label="{Spine.Unity.Editor.Spine\lInspectorUtility\n|+ EmDash\l+ GrayMiniLabel\l+ SpineButtonStyle\l+ SortingLayerFieldMethod\l- tempContent\l- grayMiniLabel\l- CenterButtonMaxWidth\l- CenterButtonHeight\l- spineButtonStyle\l- SortingLayerLabel\l- OrderInLayerLabel\l- m_SortingLayerFieldMethod\l|+ Pluralize()\l+ PluralThenS()\l+ PropertyFieldWideLabel()\l+ PropertyFieldFitLabel()\l+ ToggleLeftLayout()\l+ ToggleLeft()\l+ UndoRedoPerformed()\l+ UnityIcon\< T \>()\l+ UnityIcon()\l+ FindBaseOrSiblingProperty()\l그리고 6개 더...\l~ TempContent()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$class_spine_1_1_unity_1_1_editor_1_1_spine_inspector_utility.html",tooltip=" "];
}
